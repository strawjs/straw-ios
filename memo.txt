


plugin -> service


straw-ios-http-service
straw-ios-http-service.jp



Next naming candidate
nawa.js - NAWA: NAtive Webview Arch
It also means the ç¸„ (rope, pronounced na-wa in Japanese language) between native and webview.

/**
 * STWCall class is the representation of the request call from js to native.
 *
 */
@interface STWCall : NSObject

@property (nonatomic, retain) NSNumber *callId;
@property (nonatomic, retain) NSString *service;
@property (nonatomic, retain) NSString *method;
@property (nonatomic, retain) BOOL *success;
@property (nonatomic, assign) STW *straw;

- (void)succeed;
- (void)succeedWithString:(NSString *)value;
- (void)succeedWithNumber:(NSNumber *)value;
- (void)succeedWithJSON:(JSONObject *)value;

- (void)failWithCode:(NSNumber *)code withMessage:(NSString *)message;


@end

/**
 * STWCallFactory is the factory class of STWCall objects.
 */
@interface StrawCallFactory : NSObject
+ (STWCall *)createFromJSON:(JSONObject *)json;
@end

/**
 * STWService is
 */
@protocol STWService: NSObject

@property (nonatomic, assign, readonly) UIViewController *viewController
@property (nonatomic, assign, readonly) UIWebView *webView;

- actionCall:(STWCall *)call;

@end

/**
 STWServiceRepository is the repository class of STWServices.
 */
@interface STWServiceRepository : NSObject

@property (nonatomic, retain, readonly)
@end


/**
 *
 */
@interface ExampleService : StrawService
- (void)action:(JSONObject *)arg;
@end

@implementation ExampleService
- (void)action:(JSONObject *)arg withCall:(StrawCall *)call {
    if ([self blah]) {
        [call succeedWith:obj];
    } else {
        [call failWithCode:123 withMessage:@"example failed!"];
    }
}
@end



A service can be either stateful or stateless.
That's why the naming of `Straw Service Method`.
But our recommendation is stateless service because the statefulness with Straw
Service layer is too complicated and unusable.



[END]
